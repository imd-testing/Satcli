version: "3.8"

x-airflow-common: &airflow-common
  image: formation/steampowered:1.0
  build:
    context: .
    dockerfile: ./docker/airflow/Dockerfile
  environment:
    AIRFLOW_HOME: /opt/airflow
    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:${AIRFLOW_PG_PASSWORD}@postgres/airflow
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:${AIRFLOW_PG_PASSWORD}@postgres/airflow
    STEAMPOWERED__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://steampowered:${STEAMPOWERED_PG_PASSWORD}@postgres/steampowered
  volumes:
    - ./dags:/opt/airflow/dags
    - ./src:/opt/src
    - ./config/airflow.cfg:/opt/airflow/airflow.cfg
  depends_on:
    rabbitmq:
      condition: service_healthy
    postgres:
      condition: service_healthy

services:
#  elasticsearch:
#    image: elasticsearch:8.5.1
#    environment:
#      - xpack.security.enabled=false
#      - "discovery.type=single-node"
#    volumes:
#      - ./docker/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
#    networks:
#      steam-satcli:
#        aliases:
#          - elasticsearch
#    ports:
#      - 9200:9200
#
#  kibana:
#    image: kibana:8.5.1
#    environment:
#      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
#    networks:
#      steam-satcli:
#        aliases:
#          - kibana
#    depends_on:
#      - elasticsearch
#    ports:
#      - 5601:5601

  postgres:
    image: postgres:15.1
    environment:
      POSTGRES_PASSWORD: ${PGSQL_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
     - type: volume
       source: pgdata
       target: /var/lib/postgresql/data
       volume:
         nocopy: true
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    networks:
      steam-satcli:
        aliases:
          - postgres

  rabbitmq:
    image: rabbitmq:3.9.10
    volumes:
      - ./config/rabbitmq.conf:/etc/rabbitmq/conf.d/20-custom.conf
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      steam-satcli:
        aliases:
          - rabbitmq

  webui:
    <<: *airflow-common
    image: formation/steampowered:1.0
    command: webserver
    ports:
      - "80:80"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      steam-satcli:
        aliases:
          - webui

  scheduler:
    <<: *airflow-common
    command: scheduler
    healthcheck:
      test:
        [
          "CMD-SHELL",
          'airflow jobs check --job-type SchedulerJob --hostname "$${HOSTNAME}"',
        ]
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      steam-satcli:
        aliases:
          - scheduler

  worker-1:
    <<: *airflow-common
    command: celery worker
    healthcheck:
      test:
        [
          "CMD-SHELL",
          'celery --app airflow.executors.celery_executor.app inspect ping -d "celery@$${HOSTNAME}"'
        ]
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      steam-satcli:
        aliases:
          - worker-1

  flower:
    <<: *airflow-common
    command: celery flower
    ports:
      - "8080:5555"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:5555/"]
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      steam-satcli:
        aliases:
          - flower

networks:
  steam-satcli:
    driver: bridge

volumes:
  pgdata:
