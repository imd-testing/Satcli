version: "3.2"

services:
#  elasticsearch:
#    image: elasticsearch:8.5.1
#    environment:
#      - xpack.security.enabled=false
#      - "discovery.type=single-node"
#    volumes:
#      - ./docker/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
#    networks:
#      steam-satcli:
#        aliases:
#          - elasticsearch
#    ports:
#      - 9200:9200
#
#  kibana:
#    image: kibana:8.5.1
#    environment:
#      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
#    networks:
#      steam-satcli:
#        aliases:
#          - kibana
#    depends_on:
#      - elasticsearch
#    ports:
#      - 5601:5601

  postgres:
    image: postgres:15.1
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_USER: airflow
      POSTGRES_DB: airflow
      POSTGRES_PASSWORD: ${PGSQL_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
     - type: volume
       source: pgdata
       target: /var/lib/postgresql/data
       volume:
         nocopy: true
    networks:
      steam-satcli:
        aliases:
          - postgres

  rabbitmq:
    image: rabbitmq:3.9.10
    volumes:
      - ./config/rabbitmq.conf:/etc/rabbitmq/conf.d/20-custom.conf
    networks:
      steam-satcli:
        aliases:
          - rabbitmq

  webui:
    image: formation/steampowered:1.0
    entrypoint: ["${WEBUI_COMMAND:-/webui.sh}"]
    depends_on:
      - postgres
      - rabbitmq
    build:
      context: .
      dockerfile: ./docker/airflow/Dockerfile
    environment:
      AIRFLOW_HOME: /opt/airflow
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:${PGSQL_PASSWORD}@postgres/airflow
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:${PGSQL_PASSWORD}@postgres/airflow
    ports:
      - "80:80"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./src:/opt/src
      - ./config/airflow.cfg:/opt/airflow/airflow.cfg
    networks:
      steam-satcli:
        aliases:
          - webui

  scheduler:
    image: formation/steampowered:1.0
    entrypoint: ["/scheduler.sh"]
    depends_on:
      - webui
    environment:
      AIRFLOW_HOME: /opt/airflow
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:${PGSQL_PASSWORD}@postgres/airflow
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:${PGSQL_PASSWORD}@postgres/airflow
    volumes:
      - ./dags:/opt/airflow/dags
      - ./src:/opt/src
      - ./config/airflow.cfg:/opt/airflow/airflow.cfg
    networks:
      steam-satcli:
        aliases:
          - scheduler

  worker-1:
    image: formation/steampowered:1.0
    entrypoint: ["/worker.sh"]
    depends_on:
      - webui
    environment:
      AIRFLOW_HOME: /opt/airflow
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:${PGSQL_PASSWORD}@postgres/airflow
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:${PGSQL_PASSWORD}@postgres/airflow
    volumes:
      - ./dags:/opt/airflow/dags
      - ./src:/opt/src
      - ./config/airflow.cfg:/opt/airflow/airflow.cfg
    networks:
      steam-satcli:
        aliases:
          - worker-1

  flower:
    image: formation/steampowered:1.0
    entrypoint: ["/flower.sh"]
    depends_on:
      - webui
    environment:
      AIRFLOW_HOME: /opt/airflow
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:${PGSQL_PASSWORD}@postgres/airflow
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:${PGSQL_PASSWORD}@postgres/airflow
    volumes:
      - ./config/airflow.cfg:/opt/airflow/airflow.cfg
    ports:
      - "8080:5555"
    networks:
      steam-satcli:
        aliases:
          - flower

networks:
  steam-satcli:
    driver: bridge

volumes:
  pgdata:
